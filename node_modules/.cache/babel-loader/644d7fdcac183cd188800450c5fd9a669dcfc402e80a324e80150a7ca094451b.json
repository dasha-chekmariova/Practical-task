{"ast":null,"code":"import schedule from'../../../data/Schedule.json';import film from'../../../data/Film.json';import'./Service.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var filterTimeAndDay=[];function filterScheduleAndExtractKeys(scheduleData){var filteredDay=scheduleData.filter(function(user){return Object.keys(user.plan).some(function(time){return user.plan[time]===false;});}//знаходимо дні, де є вільна година у користувача\n);function freeTime(obj){var arr=[];for(var key in obj){if(obj[key]===false){arr.push(key);}}return arr;}for(var i=0;i<=filteredDay.length-1;i++){filterTimeAndDay.push({day:filteredDay[i].day,planKeys:freeTime(filteredDay[i].plan)});}console.log(filterTimeAndDay);return filterTimeAndDay;}filterScheduleAndExtractKeys(schedule);var filteredFilms=[];function filterFilmsByDayAndTime(filmsData,userDayAndPlanKeys){filmsData.map(function(film){for(var i=0;i<userDayAndPlanKeys.length;i++){console.log(userDayAndPlanKeys[i].planKeys);if(film.Date.day===userDayAndPlanKeys[i].day&&userDayAndPlanKeys[i].planKeys.includes(film.Date.time)){filteredFilms.push(film);}}return filteredFilms;});}filterFilmsByDayAndTime(film,filterTimeAndDay);console.log(filteredFilms);export var Service=function Service(){return/*#__PURE__*/_jsxs(\"div\",{className:\"service\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"robot\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"service-h2\",children:\"I have selected movies for you, the schedule of which coincides with your free time :)\"}),/*#__PURE__*/_jsx(\"img\",{className:\"service-img\",src:\"robot.png\",alt:\"robot\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"service-list\",children:filteredFilms.map(function(film){return/*#__PURE__*/_jsxs(\"a\",{href:\"#\",className:\"service-link\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"service-filmTitle\",children:film.Title}),/*#__PURE__*/_jsxs(\"p\",{className:\"service-date\",children:[film.Date.day,\" \",film.Date.time]}),/*#__PURE__*/_jsx(\"img\",{className:\"service-photoFilm\",src:film.Images,alt:\"img\"})]});})})]});};","map":{"version":3,"names":["schedule","film","jsx","_jsx","jsxs","_jsxs","filterTimeAndDay","filterScheduleAndExtractKeys","scheduleData","filteredDay","filter","user","Object","keys","plan","some","time","freeTime","obj","arr","key","push","i","length","day","planKeys","console","log","filteredFilms","filterFilmsByDayAndTime","filmsData","userDayAndPlanKeys","map","Date","includes","Service","className","children","src","alt","href","Title","Images"],"sources":["/Users/darina/Desktop/Practical-task/src/components/main/service/Service.jsx"],"sourcesContent":["import schedule from '../../../data/Schedule.json';\nimport film from '../../../data/Film.json';\n\nimport './Service.scss';\n\nconst filterTimeAndDay = [];\n\nfunction filterScheduleAndExtractKeys(scheduleData) {\n    const filteredDay = scheduleData.filter(user =>\n      Object.keys(user.plan).some(time => user.plan[time] === false ) //знаходимо дні, де є вільна година у користувача\n    );\n\n    function freeTime (obj) {\n        const arr = [];\n        for(let key in obj) {\n            if (obj[key] === false) {\n                arr.push(key)\n            }\n        }\n        return arr;\n    }\n\n    for (let i = 0; i <= filteredDay.length - 1; i++) {\n        \n        filterTimeAndDay.push({\n            day: filteredDay[i].day,\n            planKeys: freeTime(filteredDay[i].plan)\n        })\n    }\n    console.log(filterTimeAndDay);\n\n\n    return filterTimeAndDay;\n\n  }\n  filterScheduleAndExtractKeys(schedule)\n  let filteredFilms = [];\n  function filterFilmsByDayAndTime(filmsData, userDayAndPlanKeys) {\n    filmsData.map(film => {\n        for (let i = 0; i < userDayAndPlanKeys.length; i++) {\n            console.log(userDayAndPlanKeys[i].planKeys)\n            if (film.Date.day === userDayAndPlanKeys[i].day && userDayAndPlanKeys[i].planKeys.includes(film.Date.time)) {\n                filteredFilms.push(film)\n            }\n        }\n\n        return filteredFilms;\n    })\n  }\n  \n\n  filterFilmsByDayAndTime(film, filterTimeAndDay);\n     console.log(filteredFilms)\n\nexport const Service = () => (\n    <div className=\"service\">\n        <div className=\"robot\">\n            <h2 className='service-h2' >I have selected movies for you, the schedule of which coincides with your free time :)</h2>\n            <img className='service-img' src=\"robot.png\" alt=\"robot\" />\n        \n        </div>\n        \n        <div className=\"service-list\">\n            {filteredFilms.map(film => (\n                <a href='#' className='service-link'>\n                <h3 className='service-filmTitle'>{film.Title}</h3>\n                <p className='service-date'>{film.Date.day} {film.Date.time}</p>\n                <img className='service-photoFilm' src={film.Images} alt=\"img\" />\n                </a>\n                \n            ))}\n        </div>\n       \n    </div>\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}