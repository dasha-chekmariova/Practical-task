{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Desktop/Practical-task/src/components/main/service/Service.jsx\";\nimport schedule from '../../../data/Schedule.json';\nimport films from '../../../data/Films.json';\nimport './Service.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filterTimeAndDay = [];\nfunction filterScheduleAndExtractKeys(scheduleData) {\n  const filteredDay = scheduleData.filter(user => Object.keys(user.plan).some(time => user.plan[time] === false) //знаходимо дні, де є вільна година у користувача\n  );\n\n  function freeTime(obj) {\n    const arr = [];\n    for (let key in obj) {\n      if (obj[key] === false) {\n        arr.push(key);\n      }\n    }\n    return arr;\n  }\n  for (let i = 0; i <= filteredDay.length - 1; i++) {\n    filterTimeAndDay.push({\n      day: filteredDay[i].day,\n      planKeys: freeTime(filteredDay[i].plan)\n    });\n  }\n  return filterTimeAndDay;\n}\nfilterScheduleAndExtractKeys(schedule);\nlet filteredFilms = [];\nfunction filterFilmsByDayAndTime(filmsData, userDayAndPlanKeys) {\n  filmsData.map(film => {\n    for (let i = 0; i < userDayAndPlanKeys.length; i++) {\n      console.log(userDayAndPlanKeys[i].planKeys);\n      if (film.Date.day === userDayAndPlanKeys[i].day && userDayAndPlanKeys[i].planKeys.includes(film.Date.time)) {\n        filteredFilms.push(film);\n      }\n    }\n    return filteredFilms;\n  });\n}\nfilterFilmsByDayAndTime(films, filterTimeAndDay);\nexport const Service = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"service\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"robot\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"service-h2\",\n      children: \"I have selected movies for you, the schedule of which coincides with your free time :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"service-img\",\n      src: \"robot.png\",\n      alt: \"robot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"service-list\",\n    children: filteredFilms.map(film => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"service-link\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"service-filmTitle\",\n        children: film.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"service-date\",\n        children: [film.Date.day, \" \", film.Date.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"service-photoFilm\",\n        src: film.Images,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 5\n}, this);\n_c = Service;\nvar _c;\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"names":["schedule","films","jsxDEV","_jsxDEV","filterTimeAndDay","filterScheduleAndExtractKeys","scheduleData","filteredDay","filter","user","Object","keys","plan","some","time","freeTime","obj","arr","key","push","i","length","day","planKeys","filteredFilms","filterFilmsByDayAndTime","filmsData","userDayAndPlanKeys","map","film","console","log","Date","includes","Service","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","href","Title","Images","_c","$RefreshReg$"],"sources":["/Users/darina/Desktop/Practical-task/src/components/main/service/Service.jsx"],"sourcesContent":["import schedule from '../../../data/Schedule.json';\nimport films from '../../../data/Films.json';\n\nimport './Service.scss';\n\nconst filterTimeAndDay = [];\n\nfunction filterScheduleAndExtractKeys(scheduleData) {\n    const filteredDay = scheduleData.filter(user =>\n      Object.keys(user.plan).some(time => user.plan[time] === false ) //знаходимо дні, де є вільна година у користувача\n    );\n\n    function freeTime (obj) {\n        const arr = [];\n        for(let key in obj) {\n            if (obj[key] === false) {\n                arr.push(key)\n            }\n        }\n        return arr;\n    }\n\n    for (let i = 0; i <= filteredDay.length - 1; i++) {\n        filterTimeAndDay.push({\n            day: filteredDay[i].day,\n            planKeys: freeTime(filteredDay[i].plan)\n        })\n    }\n    return filterTimeAndDay;\n\n  }\n  filterScheduleAndExtractKeys(schedule);\n\n  let filteredFilms = [];\n\n  function filterFilmsByDayAndTime(filmsData, userDayAndPlanKeys) {\n    filmsData.map(film => {\n        for (let i = 0; i < userDayAndPlanKeys.length; i++) {\n            console.log(userDayAndPlanKeys[i].planKeys)\n            if (film.Date.day === userDayAndPlanKeys[i].day && userDayAndPlanKeys[i].planKeys.includes(film.Date.time)) {\n                filteredFilms.push(film)\n            }\n        }\n        return filteredFilms;\n    })\n  }\n  \n\nfilterFilmsByDayAndTime(films, filterTimeAndDay);\n\nexport const Service = () => (\n    <div className=\"service\">\n        <div className=\"robot\">\n            <h2 className='service-h2' >I have selected movies for you, the schedule of which coincides with your free time :)</h2>\n            <img className='service-img' src=\"robot.png\" alt=\"robot\" />\n        </div>\n        \n        <div className=\"service-list\">\n            {filteredFilms.map(film => (\n                <a href='#' className='service-link'>\n                <h3 className='service-filmTitle'>{film.Title}</h3>\n                <p className='service-date'>{film.Date.day} {film.Date.time}</p>\n                <img className='service-photoFilm' src={film.Images} alt=\"img\" />\n                </a>\n            ))}\n        </div>\n    </div>\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}